[tool.poetry]
name = "svvamp"
version = "0.11.0"
description = "Simulator of Various Voting Algorithms in Manipulating Populations"
authors = ["Fran√ßois Durand <fradurand@gmail.com>"]
repository = "https://github.com/francois-durand/svvamp"
documentation = "https://francois-durand.github.io/svvamp"
readme = "README.md"
packages = [
  {include = "svvamp"}
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
numpy = "^2.1.2"
networkx = "^3.4.1"
pandas = "^2.2.3"
matplotlib = "^3.9.2"
tikzplotlib = "^0.10.1"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
mypy = "^1.12.0"
pre-commit = "^3.8.0"
tox = "^4.23.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.4.7"
ipython = "^8.28.0"
nbsphinx = "^0.9.3"
sphinx-mdinclude = "^0.5.3"
pydata-sphinx-theme = "^0.14.3"



[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py37']
preview = true

[tool.mypy]
files = ["svvamp"]
disallow_untyped_defs = "False"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["svvamp"]

[tool.coverage.html]
directory = "cov"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.pytest.ini_options]
addopts = "--doctest-modules --cov --cov-config=pyproject.toml --cov-report xml --cov-report html --showlocals --capture=no --exitfirst --failed-first"

[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
passenv = PYTHON_VERSION
allowlist_externals = poetry
commands =
    poetry install -v
    pytest
"""

[tool.poetry_bumpversion.file."svvamp/__init__.py"]
